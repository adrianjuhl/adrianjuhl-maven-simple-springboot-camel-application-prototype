<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>


  <parent>
    <groupId>io.github.adrianjuhl</groupId>
    <artifactId>adrianjuhl-parent</artifactId>
    <version>1.1.0-SNAPSHOT</version>
  </parent>


<!--
	<parent>
		<groupId>org.apache.camel.springboot</groupId>
		<artifactId>spring-boot</artifactId>
		<version>3.20.0</version>
	</parent>
-->
  <groupId>io.github.adrianjuhl.archetype</groupId>
  <artifactId>simple-springboot-camel-application-prototype</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>Simple Springboot Camel Application Prototype</name>
  <description>A springboot camel application that helps with the development of the springboot camel archetype.</description>

  <url>https://github.com/adrianjuhl/adrianjuhl-maven-simple-springboot-camel-application-prototype</url>

  <inceptionYear>2022</inceptionYear>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>1</id>
      <name>Adrian Juhl</name>
      <email>adrian.juhl@gmail.com</email>
      <url>https://github.com/adrianjuhl</url>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>Australia/Adelaide</timezone>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:github.com:adrianjuhl/adrianjuhl-maven-simple-springboot-camel-application-prototype.git</connection>
    <developerConnection>scm:git:github.com:adrianjuhl/adrianjuhl-maven-simple-springboot-camel-application-prototype.git</developerConnection>
    <url>https://github.com/adrianjuhl/adrianjuhl-maven-simple-springboot-camel-application-prototype</url>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <properties>
<!--
    <springBootStarterWebVersion>2.3.4.RELEASE</springBootStarterWebVersion>
    <springBootStarterActuatorVersion>2.3.4.RELEASE</springBootStarterActuatorVersion>
    <logbackClassicVersion>1.2.6</logbackClassicVersion>
    <camelCxfStarterVersion>2.23.2.fuse-780036-redhat-00001</camelCxfStarterVersion>
    <cxfSpringBootStarterJaxrsVersion>3.3.6.fuse-780029-redhat-00001</cxfSpringBootStarterJaxrsVersion>
    <jacksonJaxrsJsonProviderVersion>2.9.10</jacksonJaxrsJsonProviderVersion>
    <junitJupiterVersion>5.6.2</junitJupiterVersion>
    <camelTestVersion>2.23.2.fuse-780036-redhat-00001</camelTestVersion>
    <camelTestSpringVersion>2.23.2.fuse-780036-redhat-00001</camelTestSpringVersion>
    <springBootTestVersion>2.3.4.RELEASE</springBootTestVersion>
-->
    <logstashLogbackEncoderVersion>6.6</logstashLogbackEncoderVersion>
    <cxfSpringBootStarterJaxrsVersion>3.3.6.fuse-780029-redhat-00001</cxfSpringBootStarterJaxrsVersion>
    <commonsHttpclientVersion>3.1.0.redhat-8</commonsHttpclientVersion>
    <springBootMavenPluginVersion>3.0.1</springBootMavenPluginVersion>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Spring Boot BOM -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>2.7.7</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
<!--
        <version>3.0.1</version>
-->


      <!-- Camel BOM -->
      <dependency>
        <groupId>org.apache.camel.springboot</groupId>
        <artifactId>camel-spring-boot-bom</artifactId>
        <version>3.20.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>
<!--
        <version>3.21.0-SNAPSHOT</version>
-->

    <dependencies>

        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-stream-starter</artifactId>
        </dependency>

    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>${commonsHttpclientVersion}</version>
    </dependency>


<dependency>
  <groupId>org.apache.camel.springboot</groupId>
  <artifactId>camel-cxf-rest-starter</artifactId>
</dependency>

<dependency>
 <groupId>org.apache.camel.springboot</groupId>
 <artifactId>camel-jackson-starter</artifactId>
 </dependency>


    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
      <version>${cxfSpringBootStarterJaxrsVersion}</version>
    </dependency>



    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstashLogbackEncoderVersion}</version>
    </dependency>


        <!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring-junit5</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${springBootMavenPluginVersion}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <version>2.1.0</version>
        <executions>
          <execution>
            <id>set-properties-build-properties</id>
            <phase>initialize</phase>
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scripts>
            <script>
              <![CDATA[
                def command
                def process

                command = ["bash", "-c", "TZ=Australia/Adelaide date --iso-8601=seconds"]
                process = command.execute()
                process.waitFor()
                project.properties.mvnBuildDatetime = process.in.text.trim()

                command = "git rev-parse HEAD"
                process = command.execute()
                process.waitFor()
                project.properties.gitCommitHash = process.in.text.trim()

                command = "git show --no-patch --format=%cI HEAD"
                process = command.execute()
                process.waitFor()
                project.properties.gitCommitDatetime = process.in.text.trim()

                command = "git tag --points-at HEAD"
                process = command.execute()
                process.waitFor()
                project.properties.gitCommitTags = process.in.text.trim()

                command = "git branch --show-current"
                process = command.execute()
                process.waitFor()
                project.properties.gitCommitBranch = process.in.text.trim()
              ]]>
            </script>
          </scripts>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <!-- any version of Groovy \>= 1.5.0 should work here -->
            <version>3.0.13</version>
            <type>pom</type>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>templating-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <id>filter-src</id>
            <goals>
              <goal>filter-sources</goal>
            </goals>
                <configuration>
                  <!--
                    Note the two following parameters are the default one.
                    These are specified here just as a reminder.
                    But as the Maven philosophy is strongly about conventions,
                    it's better to just not specify them.
                  -->
                  <sourceDirectory>${basedir}/src/main/java-templates</sourceDirectory>
                  <outputDirectory>${project.build.directory}/generated-sources/java-templates</outputDirectory>
                </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
